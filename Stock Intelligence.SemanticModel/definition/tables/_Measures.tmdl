table _Measures
	lineageTag: e18fec4d-e6d1-459d-a072-a082425d8b7c

	/// The “Close Price” measure computes the average of the 'Close' column
	/// for the current filter context (e.g., date, ticker).
	/// "Close" represents the final trading price of the stock on a given day (or interval).
	/// Using AVERAGE() here makes sense if you have multiple intraday rows that you want
	/// to aggregate into a single representative price for each context.
	/// If each date/ticker only has a single Close value, AVERAGE() = that value
	measure ClosePrice = ```
			
			/* The “Close Price” measure computes the average of the 'Close' column
			 for the current filter context (e.g., date, ticker).
			 "Close" represents the final trading price of the stock on a given day (or interval).
			 Using AVERAGE() here makes sense if you have multiple intraday rows that you want
			 to aggregate into a single representative price for each context.
			 If each date/ticker only has a single Close value, AVERAGE() = that value*/
			AVERAGE('factIndicators'[Close])
			
			
			```
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Basic metrics
		lineageTag: 2585ac4d-3f94-4b6b-946d-6ee0b9c3e4b4

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	/// The “Total Volume” measure sums the 'Volume' column
	/// for the current filter context (e.g., date range, ticker).
	/// "Volume" is the total number of shares (or contracts) traded during a specific period.
	measure TotalVolume = ```
			
			/* The “Total Volume” measure sums the 'Volume' column
			 for the current filter context (e.g., date range, ticker).
			 "Volume" is the total number of shares (or contracts) traded during a specific period.
			*/
			SUM('factIndicators'[Volume])
			
			```
		formatString: 0
		displayFolder: Basic metrics
		lineageTag: 112b4a18-1ca2-4978-b3b8-5fef901514d3

	/// The “SMA (50-Day)” measure calculates a 50-day Simple Moving Average of the closing price.
	/// A simple moving average smooths out short-term fluctuations in the price over a specific period.
	/// This measure looks back 50 calendar days from the current context date (inclusive).
	measure SimpleMovingAverage = ```
			
			/* The Simple Moving Average of the closing price.
			 A simple moving average smooths out short-term fluctuations in the price over a specific period.
			 This measure looks back 50 calendar days from the current context date (inclusive).
			*/
			CALCULATE(
			    [ClosePrice],
			    DATESINPERIOD(
			        'Calendar'[Date],
			        MAX('Calendar'[Date]),
			        -SELECTEDVALUE('DaysMovingAverageParameter'[Days], 15),
			        DAY
			    )
			)
			
			```
		displayFolder: Moving averages
		lineageTag: 3f584946-c9b2-4ea7-92f4-d0853a8338da

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure OpenPrice =
			
			/* The “Open Price” measure computes the average of the 'Open' column
			   for the current filter context (e.g., date, ticker).
			   "Open" represents the initial trading price of the stock on a given day (or interval).
			   Using AVERAGE() here makes sense if you have multiple intraday rows that you want
			   to aggregate into a single representative price for each context.
			   If each date/ticker only has a single Open value, AVERAGE() = that value */
			AVERAGE('factIndicators'[Open])
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Basic metrics
		lineageTag: 445ae17e-0451-45a2-a6f7-151d44f95d0e

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure HighPrice = ```
			
			/* The “High Price” measure computes the average of the 'High' column
			   for the current filter context (e.g., date, ticker).
			   "High" represents the highest trading price of the stock on a given day (or interval).
			   Using AVERAGE() here is consistent with the approach for other price measures 
			   if you have multiple intraday rows that you want
			   to aggregate into a single representative price for each context.
			   If each date/ticker only has a single High value, AVERAGE() = that value */
			AVERAGE('factIndicators'[High])
			```
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Basic metrics
		lineageTag: 376dd24b-77d0-4c19-9742-fd9d45b92ade

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure LowPrice = ```
			
			/* The “Low Price” measure computes the average of the 'Low' column
			   for the current filter context (e.g., date, ticker).
			   "Low" represents the lowest trading price of the stock on a given day (or interval).
			   Using AVERAGE() here is consistent with the approach for other price measures 
			   if you have multiple intraday rows that you want
			   to aggregate into a single representative price for each context.
			   If each date/ticker only has a single Low value, AVERAGE() = that value */
			AVERAGE('factIndicators'[Low])
			
			```
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Basic metrics
		lineageTag: 5e2e5401-f84f-4522-94ae-74bea53ac0e6

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Candlestick Title' = ```
			
			VAR SelectedTicker = SELECTEDVALUE('factIndicators'[Ticker])
			VAR SelectedCompany = SELECTEDVALUE(dTickers[shortName],"Multiple Stocks")
			RETURN "Daily Stock Price Fluctuations – " & SelectedCompany & " ("&SelectedTicker&")"
			
			```
		displayFolder: Titles
		lineageTag: 59f39dc5-b794-4614-8276-1262fc44c82e

	measure PriceChange = ```
			[ClosePrice] - [OpenPrice]
			
			```
		formatString: #,0.00\ "€";-#,0.00\ "€";#,0.00\ "€"
		displayFolder: Basic metrics
		lineageTag: da70fdc8-4ffe-46c0-b803-47482fa57513

	measure PriceChangeRelative = ```
			DIVIDE([ClosePrice] - [OpenPrice],[OpenPrice])
			
			```
		formatString: 0.0\ %;-0.0\ %;0.0\ %
		displayFolder: Basic metrics
		lineageTag: 5473e64f-549e-4655-9299-d1b94235d2f9

	/// "Quarterly P/E Ratio" compares a stock's recent price/earnings multiple.
	measure Pe = ```
			
			// "Quarterly P/E Ratio (Current)" compares a stock's recent price/earnings multiple.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPeRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 09f5ece3-493a-4133-aa90-239ff648bef9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// The “Quarterly Forward P/E Ratio” uses projected (forecasted) quarterly earnings instead of historical data,
	/// offering a forward-looking valuation multiple.
	measure ForwardPe =
			
			/* The “Quarterly Forward P/E Ratio” uses projected (forecasted) quarterly earnings instead of historical data,
			   offering a forward-looking valuation multiple.*/
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyForwardPeRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 8235a8f6-0f40-4d99-8063-0a353b750d83

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "PEG" (Price/Earnings to Growth) compares the P/E ratio to the company's quarterly earnings growth, aiming to provide a more growth-adjusted valuation view.
	measure Peg =
			
			// "PEG" (Price/Earnings to Growth) compares the P/E ratio to the company's quarterly earnings growth, aiming to provide a more growth-adjusted valuation view.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPegRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 4f295397-261f-4125-9ab2-3c562e4ac424

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// Price-to-Sales" compares the stock's price to its quarterly revenue (on a per-share basis).
	measure Ps =
			
			// Price-to-Sales" compares the stock's price to its quarterly revenue (on a per-share basis).
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPsRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: ba123e6e-8d61-46cc-badb-09b0fa0f17fe

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Market Cap" represents the total value of all a company's shares.
	measure MarketCap =
			
			// "Market Cap" represents the total value of all a company's shares.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyMarketCap]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		formatString: \$#,0;(\$#,0);\$#,0
		displayFolder: Metrics 3M
		lineageTag: 55c09ac8-9c6a-45ff-ad13-89c0159a2748

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure EnterprisesValueRevenue =
			
			// "EV/Revenue" divides Enterprise Value by quarterly revenue, indicating how much investors pay per dollar of sales.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterprisesValueRevenueRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 5c55c4da-b879-4e62-8a86-249583730b7a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// This ratio divides Enterprise Value by quarterly EBITDA, a common measure of operating performance,to show how the market values the company relative to its earnings potential.
	measure EnterprisesValueEBITDA =
			
			//This ratio divides Enterprise Value by quarterly EBITDA, a common measure of operating performance,to show how the market values the company relative to its earnings potential.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterprisesValueEBITDARatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 63e3f31d-8199-4c43-8040-6a125f080d16

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// Enterprise Value (EV) is a measure of a company's total value, incorporating market cap plus debt, minus cash.
	measure EnterpriseValue = ```
			
			// Enterprise Value (EV) is a measure of a company's total value, incorporating market cap plus debt, minus cash.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterpriseValue]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
			
			```
		formatString: \$#,0;(\$#,0);\$#,0
		displayFolder: Metrics 3M
		lineageTag: 9b076b16-97df-469c-ae94-e865ed61115a

	/// "Price-to-Book" compares the stock's price per share to its book value per share, indicating how the market values the company's assets relative to its share price.
	measure Pb =
			
			// "Price-to-Book" compares the stock's price per share to its book value per share, indicating how the market values the company's assets relative to its share price.
			VAR CurrentDate = MAX('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPbRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = CurrentDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 8b283b58-df61-4e7a-85c2-c95fb29b5e63

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Quarterly P/E Ratio" compares a stock's recent price/earnings multiple.
	measure PePrevious =
			
			VAR PreviousDate = Min('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPeRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
		displayFolder: Metrics 3M
		lineageTag: 016fee6a-adb6-4b7b-b5e4-dae0c2e1304e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// Price-to-Sales" compares the stock's price to its quarterly revenue (on a per-share basis).
	measure PsPrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPsRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 293ed32c-3931-4a77-b648-6516c01b208a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "PEG" (Price/Earnings to Growth) compares the P/E ratio to the company's quarterly earnings growth, aiming to provide a more growth-adjusted valuation view.
	measure PegPrevious =
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPegRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
		displayFolder: Metrics 3M
		lineageTag: c813a347-0904-4cec-8296-b353ae49454b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Price-to-Book" compares the stock's price per share to its book value per share, indicating how the market values the company's assets relative to its share price.
	measure PbPrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyPbRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: cca3f2eb-7ce2-4467-a939-93dde6b9b7ff

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Market Cap" represents the total value of all a company's shares.
	measure MarketCapPrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyMarketCap]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 259d3400-42ca-461f-ac5f-9f8189ed273d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// The “Quarterly Forward P/E Ratio” uses projected (forecasted) quarterly earnings instead of historical data,
	/// offering a forward-looking valuation multiple.
	measure ForwardPePrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyForwardPeRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 11eb319c-0731-467f-a0fc-8898d3e25c59

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// Enterprise Value (EV) is a measure of a company's total value, incorporating market cap plus debt, minus cash.
	measure EnterpriseValuePrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterpriseValue]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 6d3ee300-0992-44bb-9b01-46ce905a20c9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// This ratio divides Enterprise Value by quarterly EBITDA, a common measure of operating performance,to show how the market values the company relative to its earnings potential.
	measure EnterprisesValueEBITDAPrevious = ```
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterprisesValueEBITDARatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
			
			```
		displayFolder: Metrics 3M
		lineageTag: 1af396db-6519-48f1-8301-d6bb8c4171e0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PeChange = [Pe]-[PePrevious]
		displayFolder: Metrics 3M
		lineageTag: f0daffb3-deed-4e84-9d7e-ca7e3c87a6d3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PsChange = [Ps] - [PsPrevious]
		displayFolder: Metrics 3M
		lineageTag: f16c6949-2eec-4ea0-a6ab-84f8eb6aea22

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PegChange = [Peg] -[PegPrevious]
		displayFolder: Metrics 3M
		lineageTag: b9ace433-5527-4c47-8ba7-f331243c126a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PbChange = [Pb] - [PbPrevious]
		displayFolder: Metrics 3M
		lineageTag: 048d079f-7120-4245-b4b7-2b141bac9f11

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure EnterprisesValueEBITDAChange = [EnterprisesValueEBITDA]-[EnterprisesValueEBITDAPrevious]
		displayFolder: Metrics 3M
		lineageTag: 9508c2a2-16a2-417a-bdfc-67c8a8dce804

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure EnterprisesValueRevenuePrevious =
			
			VAR PreviousDate = MIN('dFundamentals3M'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentals3M'[quarterlyEnterprisesValueRevenueRatio]),
			    KEEPFILTERS('dFundamentals3M'[Date] = PreviousDate)
			)
		displayFolder: Metrics 3M
		lineageTag: d9a3f7a2-43f4-4407-a536-4590b33a2dfe

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure EnterprisesValueRevenueChange = [EnterprisesValueRevenue]-[EnterprisesValueRevenuePrevious]
		displayFolder: Metrics 3M
		lineageTag: 64af1225-c8f8-4e3d-a392-975aa25e14d4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ForwardPeChange = [ForwardPe]-[ForwardPePrevious]
		displayFolder: Metrics 3M
		lineageTag: a8d959b7-4ce4-42ec-b810-bb55da070574

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure EnterpriseValueChange = [EnterpriseValue]-[EnterpriseValuePrevious]
		displayFolder: Metrics 3M
		lineageTag: d69a38b1-76b5-4801-a761-00f27454ccf7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure MarketCapChange = [MarketCap]-[MarketCapPrevious]
		displayFolder: Metrics 3M
		lineageTag: ef0b0dba-e0ec-4d7f-ba4c-fabbb8f8e294

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/E Ratio (Current)" measures a company's price-to-earnings multiple
	/// based on the last 12 months.
	measure trailingPeRatio = ```
			
			// "Trailing P/E Ratio (Current)" measures a company's price-to-earnings multiple 
			// based on the last 12 months. It uses the max date in dFundamentalsTTM.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPeRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
			
			```
		displayFolder: Metrics TTM
		lineageTag: e1f18d61-0924-49c6-aca9-a2939f0744a8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/E Ratio (Current)" measures a company's price-to-earnings multiple
	/// based on the last 12 months.
	measure trailingPeRatioPrevious = ```
			
			// "Trailing P/E Ratio (Previous)" calculates the TTM P/E at the min date 
			// (assuming 2 distinct dates). Useful for comparing change over time.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPeRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
			```
		displayFolder: Metrics TTM
		lineageTag: 55af9b3e-a3ba-4e9c-af1a-d63c7d224932

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/E Ratio (Current)" measures a company's price-to-earnings multiple
	/// based on the last 12 months.
	measure trailingPeRatioChange =
			
			// "Trailing P/E Ratio (Change)" is the absolute difference between Current and Previous.
			[trailingPeRatio] - [trailingPeRatioPrevious]
		displayFolder: Metrics TTM
		lineageTag: c5d80b7c-b825-43ca-9fdb-7ef6f6ba9752

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Forward P/E Ratio (Current)" uses projected earnings over a trailing period, capturing future expectations
	/// 
	measure trailingForwardPeRatio = ```
			
			// "Trailing Forward P/E Ratio (Current)" uses projected earnings over a trailing period, 
			// capturing future expectations. Applies the max date filter.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingForwardPeRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
			```
		displayFolder: Metrics TTM
		lineageTag: b6547bb1-0ba0-4c09-85a2-0e6110689451

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Forward P/E Ratio (Current)" uses projected earnings over a trailing period, capturing future expectations
	/// 
	measure trailingForwardPeRatioPrevious =
			
			// "Trailing Forward P/E Ratio (Previous)" at the min date, for comparison against the current forward P/E.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingForwardPeRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 9c04d926-aa62-4425-92f0-b13d4354948b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Forward P/E Ratio (Current)" uses projected earnings over a trailing period, capturing future expectations
	/// 
	measure trailingForwardPeRatioChange = ```
			
			// "Trailing Forward P/E Ratio (Change)" is the absolute difference 
			// between the current and previous trailing forward P/E.
			[trailingForwardPeRatio] - [trailingForwardPeRatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 84b0c536-0ed7-4301-8952-1af4b3d054dd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Market Cap (Current)" gives the total valuation of a company’s shares over the TTM period
	measure trailingMarketCap =
			
			// "Trailing Market Cap (Current)" gives the total valuation of a company’s shares over the TTM period, using the max date in dFundamentalsTTM.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingMarketCap]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Metrics TTM
		lineageTag: 6cd1ee08-b51a-434a-97be-62e0c6a2baa8

	/// "Trailing Market Cap (Current)" gives the total valuation of a company’s shares over the TTM period
	measure trailingMarketCapPrevious = ```
			
			// "Trailing Market Cap (Previous)" at the min date, to see how 
			// market valuation changed between two TTM snapshots.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingMarketCap]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
			```
		displayFolder: Metrics TTM
		lineageTag: 07b38fc3-9b94-4654-90f1-6e13482afd37

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Market Cap (Current)" gives the total valuation of a company’s shares over the TTM period
	measure trailingMarketCapChange = ```
			
			// "Trailing Market Cap (Change)" is the difference in market cap 
			// from the earliest to the latest TTM date.
			[trailingMarketCap] - [trailingMarketCapPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: dbaafd76-1f76-4ba5-bdec-5b15a9be4f26

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Enterprise Value (Current)" includes market cap plus debt minus cash
	measure trailingEnterpriseValue =
			
			// "Trailing Enterprise Value (Current)" includes market cap plus debt minus cash, referencing the last TTM date for each Ticker.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterpriseValue]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Metrics TTM
		lineageTag: ecc99ab3-0cba-45b5-bd21-2a517bed96e5

	/// "Trailing Enterprise Value (Current)" includes market cap plus debt minus cash
	measure trailingEnterpriseValuePrevious =
			
			// "Trailing Enterprise Value (Previous)" for the min date, enabling quarter-to-quarter or period-to-period comparisons within TTM data.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterpriseValue]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: f8a78f0e-0424-4284-96d2-169b87d65720

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing Enterprise Value (Current)" includes market cap plus debt minus cash
	measure trailingEnterpriseValueChange = ```
			
			// "Trailing Enterprise Value (Change)" is the absolute difference 
			// between Current and Previous TTM EV.
			[trailingEnterpriseValue] - [trailingEnterpriseValuePrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 5cc5d9c9-8f85-4cdd-a429-b3cd22093c55

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/EBITDA (Current)" measures Enterprise Value over EBITDA for the trailing 12 months
	measure trailingEnterprisesValueEBITDARatio =
			
			// "Trailing EV/EBITDA (Current)" measures Enterprise Value over EBITDA for the trailing 12 months, referencing the max date in the table.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterprisesValueEBITDARatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		displayFolder: Metrics TTM
		lineageTag: a9846e48-7f30-418b-b2b8-a4f886d850ae

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/EBITDA (Current)" measures Enterprise Value over EBITDA for the trailing 12 months
	measure trailingEnterprisesValueEBITDARatioPrevious = ```
			
			/* "Trailing EV/EBITDA (Previous)" uses the earliest TTM date per Ticker to show 
			   how this ratio has changed. */
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterprisesValueEBITDARatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
			```
		displayFolder: Metrics TTM
		lineageTag: 2b9bd822-6ff5-45cb-9513-e28f2f53d0de

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/EBITDA (Current)" measures Enterprise Value over EBITDA for the trailing 12 months
	measure trailingEnterprisesValueEBITDARatioChange = ```
			
			/* "Trailing EV/EBITDA (Change)" is the difference between the Current 
			   and Previous TTM EV/EBITDA ratio. */
			[trailingEnterprisesValueEBITDARatio] - [trailingEnterprisesValueEBITDARatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 4f52fb99-7bc1-497b-813a-8376281841fc

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing PEG Ratio (Current)" uses TTM data to compare price/earnings to growth.
	measure trailingPegRatio = ```
			
			// "Trailing PEG Ratio (Current)" uses TTM data to compare price/earnings to growth. 
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPegRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
			```
		displayFolder: Metrics TTM
		lineageTag: c07baad2-1280-4bd0-b8d6-902fb0a00b91

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing PEG Ratio (Current)" uses TTM data to compare price/earnings to growth.
	measure trailingPegRatioPrevious =
			
			// "Trailing PEG Ratio (Previous)" references the earliest TTM date for each Ticker,
			// letting you see how the growth-based valuation changed.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPegRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 95512fe3-b2ad-4b1d-ae00-474d14d364a7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing PEG Ratio (Current)" uses TTM data to compare price/earnings to growth.
	measure trailingPegRatioChange = ```
			
			// "Trailing PEG Ratio (Change)" is the numeric difference between 
			// the current and previous TTM PEG Ratio.
			[trailingPegRatio] - [trailingPegRatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 2e29b67d-94ea-4a1b-ba67-481e2910d320

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/Revenue (Current)" calculates Enterprise Value Revenue for the trailing 12 months
	measure trailingEnterprisesValueRevenueRatio =
			
			// "Trailing EV/Revenue (Current)" calculates Enterprise Value Revenue for the trailing 12 months at the max date.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterprisesValueRevenueRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 7843c49d-3c98-4a20-bbd1-fd7310905751

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/Revenue (Current)" calculates Enterprise Value Revenue for the trailing 12 months
	measure trailingEnterprisesValueRevenueRatioPrevious =
			
			// "Trailing EV/Revenue (Previous)" uses the min date to see how this valuation metric changed.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingEnterprisesValueRevenueRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 478e718c-d06a-4bd5-9bcc-226988fba8b3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing EV/Revenue (Current)" calculates Enterprise Value Revenue for the trailing 12 months
	measure trailingEnterprisesValueRevenueRatioChange = ```
			
			// "Trailing EV/Revenue (Change)" is simply the difference 
			// between the current and previous TTM ratio.
			[trailingEnterprisesValueRevenueRatio] - [trailingEnterprisesValueRevenueRatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 02eeaca1-24a7-478c-872a-df1d28a44947

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/B Ratio (Current)" for the trailing 12 months
	measure trailingPbRatio =
			
			// "Trailing P/B Ratio (Current)" for the trailing 12 months, referencing the max date in dFundamentalsTTM.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPbRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 77bce7f8-aadc-4d66-9d4a-718a7854de99

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/B Ratio (Current)" for the trailing 12 months
	measure trailingPbRatioPrevious =
			
			// "Trailing P/B Ratio (Previous)" referencing the min date, letting you see if the company's price-to-book changed significantly over time.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPbRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 4a88824c-e5d1-49b9-b81b-be76123ca8b9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/B Ratio (Current)" for the trailing 12 months
	measure trailingPbRatioChange = ```
			
			// "Trailing P/B Ratio (Change)" is the absolute difference 
			// from the earliest to the latest TTM date for each Ticker.
			[trailingPbRatio] - [trailingPbRatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: f472a77d-4167-47b7-9cb1-759197c1ce7d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/S Ratio (Current)" calculates Price-to-Sales using the TTM period
	measure trailingPsRatio =
			
			// "Trailing P/S Ratio (Current)" calculates Price-to-Sales using the TTM period at the max date for each Ticker.
			VAR CurrentDate = MAX('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPsRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = CurrentDate)
			)
		displayFolder: Metrics TTM
		lineageTag: f5a5ef33-b7b6-4f1d-9005-cf48cfbdc8c4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/S Ratio (Current)" calculates Price-to-Sales using the TTM period
	measure trailingPsRatioPrevious =
			
			// "Trailing P/S Ratio (Previous)" uses the min date to compare how the P/S changed from earliest to latest TTM date.
			VAR PreviousDate = MIN('dFundamentalsTTM'[Date])
			RETURN
			CALCULATE(
			    AVERAGE('dFundamentalsTTM'[trailingPsRatio]),
			    KEEPFILTERS('dFundamentalsTTM'[Date] = PreviousDate)
			)
		displayFolder: Metrics TTM
		lineageTag: 18878fc0-2096-4ce3-9714-9b9c40849daf

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// "Trailing P/S Ratio (Current)" calculates Price-to-Sales using the TTM period
	measure trailingPsRatioChange = ```
			
			// "Trailing P/S Ratio (Change)" is the difference 
			// between the current and previous TTM ratio.
			[trailingPsRatio] - [trailingPsRatioPrevious]
			```
		displayFolder: Metrics TTM
		lineageTag: 13ce38dd-ceca-48a6-b908-71436104cd95

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ChangeIcon = ```
			
			    SWITCH( 
			        TRUE(),
			        [PriceChange]<0,"TriangleLow",
			        [PriceChange]=0,"TriangleMedium",
			        [PriceChange]>0,"TriangleHigh"
			    )
			```
		lineageTag: 22393062-f129-48e3-87f7-b223588421c7

	measure ChangeColor = ```
			
			 SWITCH(
			    TRUE(),
			    [PriceChange]<0,"#E53935",
			    "#43A047")
			```
		lineageTag: fdacf546-43b2-445f-b3f6-213321ef62b2

	partition _Measures = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

